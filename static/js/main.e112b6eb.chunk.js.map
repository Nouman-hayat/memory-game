{"version":3,"sources":["components/Card.js","data.js","components/Grid.js","components/emptycard.js","components/Emptygrid.js","App.js","index.js"],"names":["Card","item","id","handleClick","itemClass","stat","className","onClick","src","img","alt","allimg","name","Grid","props","cardchoice","slice","tcard","useState","sort","Math","random","items","setItems","prev","setPrev","current","updateimg","updatesdata","console","log","updatecounter","setTimeout","map","index","Emptycard","Emptygrid","App","inputvalue","setinputvalue","btnvalue","setBtnvalue","second","setsecond","starttime","setStarttimer","timerid","setTimerid","counter","setcounter","imgdata","setimgdata","useEffect","intervalid","setInterval","clearInterval","type","value","min","max","onChange","e","target","event","preventDefault","window","location","reload","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e112b6eb.chunk.js","sourcesContent":["function Card({item, id, handleClick}){\r\n    const itemClass = item.stat ? \" active \" + item.stat : \"\"\r\n\r\n    return (\r\n        <div className={\"card\" + itemClass} onClick={() => handleClick(id)}>\r\n            <img src={item.img} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","export const allimg = [\r\n  { id: 1, img: \"/img/ane.jpg\", name: \"ane\", stat: \"\" },\r\n  { id: 1, img: \"/img/ane.jpg\", name: \"ane\", stat: \"\" },\r\n  { id: 2, img: \"/img/bulbizarre.jpg\", name: \"bulbizarre\", stat: \"\" },\r\n  { id: 2, img: \"/img/bulbizarre.jpg\", name: \"bulbizarre\", stat: \"\" },\r\n  { id: 3, img: \"/img/cochon.jpg\", name: \"cochon\", stat: \"\" },\r\n  { id: 3, img: \"/img/cochon.jpg\", name: \"cochon\", stat: \"\" },\r\n  { id: 4, img: \"/img/donkekong.jpg\", name: \"donkekong\", stat: \"\" },\r\n  { id: 4, img: \"/img/donkekong.jpg\", name: \"donkekong\", stat: \"\" },\r\n  { id: 5, img: \"/img/girafe.jpg\", name: \"girafe\", stat: \"\" },\r\n  { id: 5, img: \"/img/girafe.jpg\", name: \"girafe\", stat: \"\" },\r\n  { id: 6, img: \"/img/hibou.jpg\", name: \"hibou\", stat: \"\" },\r\n  { id: 6, img: \"/img/hibou.jpg\", name: \"hibou\", stat: \"\" },\r\n];","import { useState } from 'react'\r\nimport Card from './Card'\r\nimport { allimg } from '../data'\r\nfunction Grid(props) {\r\n \r\n    const cardchoice=allimg.slice(0 , props.tcard)\r\n   \r\n    const [items, setItems] = useState(cardchoice.sort(() => Math.random() - 0.5))\r\n   const [gridvalue, setGridvalue] = useState(0);\r\n\r\n    //   const [items, setItems] = useState(\r\n    //     allimg.sort(() => Math.random() - 0.5)\r\n    //   );\r\n   \r\n    const [prev, setPrev] = useState(-1);\r\n\r\n    function check(current){\r\n        if(items[current].id == items[prev].id){\r\n          items[current].stat = \"correct\"\r\n            items[prev].stat = \"correct\"\r\n            if (current == props.tcard -1) {\r\n                props.updatesdata();\r\n                console.log(\"dd\")\r\n            }\r\n            setItems([...items])\r\n            setPrev(-1)\r\n            props.updatecounter();\r\n            \r\n        }else{\r\n            items[current].stat = \"wrong\"\r\n            items[prev].stat = \"wrong\"\r\n            setItems([...items])\r\n            setTimeout(() => {\r\n                items[current].stat = \"\"\r\n                items[prev].stat = \"\"\r\n                setItems([...items])\r\n                setPrev(-1)\r\n    }, 1000)\r\n        }\r\n    }\r\n\r\n    function handleClick(id) {\r\n        props.updateimg(items[id].name);\r\n        if(prev === -1){\r\n            items[id].stat = \"active\"\r\n            setItems([...items])\r\n            setPrev(id)\r\n           \r\n        }else{\r\n            check(id)\r\n        }\r\n        \r\n    }\r\n   \r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {items.map((item, index) => (\r\n          <Card\r\n            key={index}\r\n            item={item}\r\n            id={index}\r\n            handleClick={handleClick}\r\n            \r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Grid","import React from \"react\";\r\n\r\nexport default function Emptycard() {\r\n  return (\r\n    <div className=\"empty-card\">\r\n      <img src=\"/img/inconnu.jpg\" alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n","import React ,{ useState } from 'react'\r\nimport Emptycard from './emptycard';\r\nexport default function Emptygrid() {\r\n    const [loopval, setloopval] = useState(32);\r\n    return (\r\n        <div className=\"container empty-grid\">\r\n            \r\n            \r\n    \r\n       \r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n        <Emptycard />\r\n      </div>\r\n    );\r\n}\r\n","import { useState ,useEffect } from \"react\";\r\nimport Grid from \"./components/Grid\";\r\nimport Emptygrid from \"./components/Emptygrid\";\r\nfunction App() {\r\n  const [inputvalue, setinputvalue] = useState(4);\r\n  const [btnvalue, setBtnvalue] = useState(false);\r\n  const [second, setsecond] = useState(0);\r\n  const [starttime, setStarttimer] = useState(false);\r\n  const [timerid, setTimerid] = useState(0);\r\n  const [counter, setcounter] = useState(0);\r\nconst [imgdata, setimgdata] = useState(\"?\");\r\n\r\n  const updatecounter =() =>{\r\n    setcounter(counter+1)\r\n  }\r\n  const updateimg = (data) => {\r\n   setimgdata(data)\r\n  };\r\n  function inputhandle(e) {\r\n   setinputvalue(e.target.value);\r\n  }\r\n  const updatesdata = () => {\r\n   \r\n  \r\n \r\n  setcounter(0);\r\n    setStarttimer(false);\r\n\r\n  };\r\n \r\n  useEffect(() => {\r\n    let intervalid = null;\r\n\r\n    if (starttime) {\r\n      intervalid = setInterval(() => {\r\n        setsecond((prev) => (prev += 1));\r\n      }, 1000);\r\n      setTimerid(intervalid);\r\n    }\r\n    else {\r\n      clearInterval(timerid)\r\n    }\r\n  }, [starttime]);\r\n  \r\n  function setnumber(event) {\r\n     event.preventDefault()\r\n    setBtnvalue(true);\r\n    setStarttimer(true)\r\n    \r\n   \r\n  }\r\n  function stop(event) {\r\n    event.preventDefault();\r\n    setBtnvalue(false);\r\n    setsecond(0)\r\n    setcounter(0)\r\n    setStarttimer(false)\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"header\">\r\n        <form>\r\n          <label>Select pair</label>\r\n          <input\r\n            type=\"number\"\r\n            value={inputvalue}\r\n            min=\"2\"\r\n            max=\"6\"\r\n            onChange={inputhandle}\r\n          />\r\n          {btnvalue ? (\r\n            <button className=\"btns stop-btn\" onClick={stop}>\r\n              {\" \"}\r\n              Stop\r\n            </button>\r\n          ) : (\r\n            <button className=\"btns start-btn\" onClick={setnumber}>\r\n              {\" \"}\r\n              Start\r\n            </button>\r\n          )}\r\n        </form>\r\n\r\n        <span>Total card = {inputvalue * 2}</span>\r\n\r\n        <span>Time = {second}</span>\r\n        <span>Pairs = {counter}</span>\r\n        <span>{imgdata}</span>\r\n      </div>\r\n      <div className=\"grid-wrapper\">\r\n        {btnvalue ? (\r\n          <Grid\r\n            tcard={inputvalue * 2}\r\n            updatecounter={updatecounter}\r\n            updatesdata={updatesdata}\r\n            updateimg={updateimg}\r\n          />\r\n        ) : (\r\n          <Emptygrid />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}